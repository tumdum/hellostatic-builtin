<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="838" onload="init(evt)" viewBox="0 0 1200 838" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="838" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="821.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="821.00"> </text><svg id="frames" x="10" width="1180" total_samples="34"><g><title>[unknown] (3 samples, 8.82%)</title><rect x="5.8824%" y="741" width="8.8235%" height="15" fill="rgb(227,0,7)" fg:x="2" fg:w="3"/><text x="6.1324%" y="751.50">[unknown]</text></g><g><title>[unknown] (3 samples, 8.82%)</title><rect x="5.8824%" y="725" width="8.8235%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="3"/><text x="6.1324%" y="735.50">[unknown]</text></g><g><title>[unknown] (3 samples, 8.82%)</title><rect x="5.8824%" y="709" width="8.8235%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="3"/><text x="6.1324%" y="719.50">[unknown]</text></g><g><title>[unknown] (3 samples, 8.82%)</title><rect x="5.8824%" y="693" width="8.8235%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="3"/><text x="6.1324%" y="703.50">[unknown]</text></g><g><title>[unknown] (3 samples, 8.82%)</title><rect x="5.8824%" y="677" width="8.8235%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="3"/><text x="6.1324%" y="687.50">[unknown]</text></g><g><title>[unknown] (3 samples, 8.82%)</title><rect x="5.8824%" y="661" width="8.8235%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="3"/><text x="6.1324%" y="671.50">[unknown]</text></g><g><title>[unknown] (3 samples, 8.82%)</title><rect x="5.8824%" y="645" width="8.8235%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="3"/><text x="6.1324%" y="655.50">[unknown]</text></g><g><title>[unknown] (3 samples, 8.82%)</title><rect x="5.8824%" y="629" width="8.8235%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="3"/><text x="6.1324%" y="639.50">[unknown]</text></g><g><title>[unknown] (3 samples, 8.82%)</title><rect x="5.8824%" y="613" width="8.8235%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="3"/><text x="6.1324%" y="623.50">[unknown]</text></g><g><title>[unknown] (3 samples, 8.82%)</title><rect x="5.8824%" y="597" width="8.8235%" height="15" fill="rgb(220,122,19)" fg:x="2" fg:w="3"/><text x="6.1324%" y="607.50">[unknown]</text></g><g><title>[unknown] (2 samples, 5.88%)</title><rect x="8.8235%" y="581" width="5.8824%" height="15" fill="rgb(250,228,42)" fg:x="3" fg:w="2"/><text x="9.0735%" y="591.50">[unknow..</text></g><g><title>[unknown] (2 samples, 5.88%)</title><rect x="8.8235%" y="565" width="5.8824%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="2"/><text x="9.0735%" y="575.50">[unknow..</text></g><g><title>[unknown] (2 samples, 5.88%)</title><rect x="8.8235%" y="549" width="5.8824%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="2"/><text x="9.0735%" y="559.50">[unknow..</text></g><g><title>[unknown] (6 samples, 17.65%)</title><rect x="0.0000%" y="757" width="17.6471%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="6"/><text x="0.2500%" y="767.50">[unknown]</text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 2.94%)</title><rect x="14.7059%" y="741" width="2.9412%" height="15" fill="rgb(217,207,13)" fg:x="5" fg:w="1"/><text x="14.9559%" y="751.50">co..</text></g><g><title>aoc21::day01::solve (1 samples, 2.94%)</title><rect x="17.6471%" y="485" width="2.9412%" height="15" fill="rgb(231,73,38)" fg:x="6" fg:w="1"/><text x="17.8971%" y="495.50">ao..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 2.94%)</title><rect x="17.6471%" y="469" width="2.9412%" height="15" fill="rgb(225,20,46)" fg:x="6" fg:w="1"/><text x="17.8971%" y="479.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 2.94%)</title><rect x="17.6471%" y="453" width="2.9412%" height="15" fill="rgb(210,31,41)" fg:x="6" fg:w="1"/><text x="17.8971%" y="463.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 2.94%)</title><rect x="17.6471%" y="437" width="2.9412%" height="15" fill="rgb(221,200,47)" fg:x="6" fg:w="1"/><text x="17.8971%" y="447.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 2.94%)</title><rect x="17.6471%" y="421" width="2.9412%" height="15" fill="rgb(226,26,5)" fg:x="6" fg:w="1"/><text x="17.8971%" y="431.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 2.94%)</title><rect x="17.6471%" y="405" width="2.9412%" height="15" fill="rgb(249,33,26)" fg:x="6" fg:w="1"/><text x="17.8971%" y="415.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 2.94%)</title><rect x="17.6471%" y="389" width="2.9412%" height="15" fill="rgb(235,183,28)" fg:x="6" fg:w="1"/><text x="17.8971%" y="399.50">al..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 2.94%)</title><rect x="17.6471%" y="373" width="2.9412%" height="15" fill="rgb(221,5,38)" fg:x="6" fg:w="1"/><text x="17.8971%" y="383.50">&lt;c..</text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 2.94%)</title><rect x="17.6471%" y="357" width="2.9412%" height="15" fill="rgb(247,18,42)" fg:x="6" fg:w="1"/><text x="17.8971%" y="367.50">&lt;s..</text></g><g><title>std::io::impls::&lt;impl std::io::BufRead for &amp;mut B&gt;::read_line (1 samples, 2.94%)</title><rect x="17.6471%" y="341" width="2.9412%" height="15" fill="rgb(241,131,45)" fg:x="6" fg:w="1"/><text x="17.8971%" y="351.50">st..</text></g><g><title>std::io::BufRead::read_line (1 samples, 2.94%)</title><rect x="17.6471%" y="325" width="2.9412%" height="15" fill="rgb(249,31,29)" fg:x="6" fg:w="1"/><text x="17.8971%" y="335.50">st..</text></g><g><title>std::io::append_to_string (1 samples, 2.94%)</title><rect x="17.6471%" y="309" width="2.9412%" height="15" fill="rgb(225,111,53)" fg:x="6" fg:w="1"/><text x="17.8971%" y="319.50">st..</text></g><g><title>std::io::BufRead::read_line::{{closure}} (1 samples, 2.94%)</title><rect x="17.6471%" y="293" width="2.9412%" height="15" fill="rgb(238,160,17)" fg:x="6" fg:w="1"/><text x="17.8971%" y="303.50">st..</text></g><g><title>std::io::read_until (1 samples, 2.94%)</title><rect x="17.6471%" y="277" width="2.9412%" height="15" fill="rgb(214,148,48)" fg:x="6" fg:w="1"/><text x="17.8971%" y="287.50">st..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 2.94%)</title><rect x="17.6471%" y="261" width="2.9412%" height="15" fill="rgb(232,36,49)" fg:x="6" fg:w="1"/><text x="17.8971%" y="271.50">al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 2.94%)</title><rect x="17.6471%" y="245" width="2.9412%" height="15" fill="rgb(209,103,24)" fg:x="6" fg:w="1"/><text x="17.8971%" y="255.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 2.94%)</title><rect x="17.6471%" y="229" width="2.9412%" height="15" fill="rgb(229,88,8)" fg:x="6" fg:w="1"/><text x="17.8971%" y="239.50">al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 2.94%)</title><rect x="17.6471%" y="213" width="2.9412%" height="15" fill="rgb(213,181,19)" fg:x="6" fg:w="1"/><text x="17.8971%" y="223.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 2.94%)</title><rect x="17.6471%" y="197" width="2.9412%" height="15" fill="rgb(254,191,54)" fg:x="6" fg:w="1"/><text x="17.8971%" y="207.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 2.94%)</title><rect x="17.6471%" y="181" width="2.9412%" height="15" fill="rgb(241,83,37)" fg:x="6" fg:w="1"/><text x="17.8971%" y="191.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 2.94%)</title><rect x="17.6471%" y="165" width="2.9412%" height="15" fill="rgb(233,36,39)" fg:x="6" fg:w="1"/><text x="17.8971%" y="175.50">al..</text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 2.94%)</title><rect x="17.6471%" y="149" width="2.9412%" height="15" fill="rgb(226,3,54)" fg:x="6" fg:w="1"/><text x="17.8971%" y="159.50">al..</text></g><g><title>__GI___libc_malloc (1 samples, 2.94%)</title><rect x="17.6471%" y="133" width="2.9412%" height="15" fill="rgb(245,192,40)" fg:x="6" fg:w="1"/><text x="17.8971%" y="143.50">__..</text></g><g><title>tcache_get (1 samples, 2.94%)</title><rect x="17.6471%" y="117" width="2.9412%" height="15" fill="rgb(238,167,29)" fg:x="6" fg:w="1"/><text x="17.8971%" y="127.50">tc..</text></g><g><title>aoc21::day03::part_one (1 samples, 2.94%)</title><rect x="20.5882%" y="469" width="2.9412%" height="15" fill="rgb(232,182,51)" fg:x="7" fg:w="1"/><text x="20.8382%" y="479.50">ao..</text></g><g><title>aoc21::day03::most_frequent_bit (1 samples, 2.94%)</title><rect x="20.5882%" y="453" width="2.9412%" height="15" fill="rgb(231,60,39)" fg:x="7" fg:w="1"/><text x="20.8382%" y="463.50">ao..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (1 samples, 2.94%)</title><rect x="20.5882%" y="437" width="2.9412%" height="15" fill="rgb(208,69,12)" fg:x="7" fg:w="1"/><text x="20.8382%" y="447.50">&lt;c..</text></g><g><title>aoc21::day03::most_frequent_bit::{{closure}} (1 samples, 2.94%)</title><rect x="20.5882%" y="421" width="2.9412%" height="15" fill="rgb(235,93,37)" fg:x="7" fg:w="1"/><text x="20.8382%" y="431.50">ao..</text></g><g><title>aoc21::day03::solve (2 samples, 5.88%)</title><rect x="20.5882%" y="485" width="5.8824%" height="15" fill="rgb(213,116,39)" fg:x="7" fg:w="2"/><text x="20.8382%" y="495.50">aoc21::..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 2.94%)</title><rect x="23.5294%" y="469" width="2.9412%" height="15" fill="rgb(222,207,29)" fg:x="8" fg:w="1"/><text x="23.7794%" y="479.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 2.94%)</title><rect x="23.5294%" y="453" width="2.9412%" height="15" fill="rgb(206,96,30)" fg:x="8" fg:w="1"/><text x="23.7794%" y="463.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 2.94%)</title><rect x="23.5294%" y="437" width="2.9412%" height="15" fill="rgb(218,138,4)" fg:x="8" fg:w="1"/><text x="23.7794%" y="447.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 2.94%)</title><rect x="23.5294%" y="421" width="2.9412%" height="15" fill="rgb(250,191,14)" fg:x="8" fg:w="1"/><text x="23.7794%" y="431.50">&lt;a..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 2.94%)</title><rect x="23.5294%" y="405" width="2.9412%" height="15" fill="rgb(239,60,40)" fg:x="8" fg:w="1"/><text x="23.7794%" y="415.50">&lt;c..</text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 2.94%)</title><rect x="23.5294%" y="389" width="2.9412%" height="15" fill="rgb(206,27,48)" fg:x="8" fg:w="1"/><text x="23.7794%" y="399.50">&lt;s..</text></g><g><title>std::io::impls::&lt;impl std::io::BufRead for &amp;mut B&gt;::read_line (1 samples, 2.94%)</title><rect x="23.5294%" y="373" width="2.9412%" height="15" fill="rgb(225,35,8)" fg:x="8" fg:w="1"/><text x="23.7794%" y="383.50">st..</text></g><g><title>std::io::BufRead::read_line (1 samples, 2.94%)</title><rect x="23.5294%" y="357" width="2.9412%" height="15" fill="rgb(250,213,24)" fg:x="8" fg:w="1"/><text x="23.7794%" y="367.50">st..</text></g><g><title>std::io::append_to_string (1 samples, 2.94%)</title><rect x="23.5294%" y="341" width="2.9412%" height="15" fill="rgb(247,123,22)" fg:x="8" fg:w="1"/><text x="23.7794%" y="351.50">st..</text></g><g><title>std::io::BufRead::read_line::{{closure}} (1 samples, 2.94%)</title><rect x="23.5294%" y="325" width="2.9412%" height="15" fill="rgb(231,138,38)" fg:x="8" fg:w="1"/><text x="23.7794%" y="335.50">st..</text></g><g><title>std::io::read_until (1 samples, 2.94%)</title><rect x="23.5294%" y="309" width="2.9412%" height="15" fill="rgb(231,145,46)" fg:x="8" fg:w="1"/><text x="23.7794%" y="319.50">st..</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (1 samples, 2.94%)</title><rect x="23.5294%" y="293" width="2.9412%" height="15" fill="rgb(251,118,11)" fg:x="8" fg:w="1"/><text x="23.7794%" y="303.50">&lt;s..</text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (1 samples, 2.94%)</title><rect x="23.5294%" y="277" width="2.9412%" height="15" fill="rgb(217,147,25)" fg:x="8" fg:w="1"/><text x="23.7794%" y="287.50">&lt;s..</text></g><g><title>std::sys::unix::fs::File::read (1 samples, 2.94%)</title><rect x="23.5294%" y="261" width="2.9412%" height="15" fill="rgb(247,81,37)" fg:x="8" fg:w="1"/><text x="23.7794%" y="271.50">st..</text></g><g><title>std::sys::unix::fd::FileDesc::read (1 samples, 2.94%)</title><rect x="23.5294%" y="245" width="2.9412%" height="15" fill="rgb(209,12,38)" fg:x="8" fg:w="1"/><text x="23.7794%" y="255.50">st..</text></g><g><title>__GI___libc_read (1 samples, 2.94%)</title><rect x="23.5294%" y="229" width="2.9412%" height="15" fill="rgb(227,1,9)" fg:x="8" fg:w="1"/><text x="23.7794%" y="239.50">__..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="23.5294%" y="213" width="2.9412%" height="15" fill="rgb(248,47,43)" fg:x="8" fg:w="1"/><text x="23.7794%" y="223.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="23.5294%" y="197" width="2.9412%" height="15" fill="rgb(221,10,30)" fg:x="8" fg:w="1"/><text x="23.7794%" y="207.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="23.5294%" y="181" width="2.9412%" height="15" fill="rgb(210,229,1)" fg:x="8" fg:w="1"/><text x="23.7794%" y="191.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="23.5294%" y="165" width="2.9412%" height="15" fill="rgb(222,148,37)" fg:x="8" fg:w="1"/><text x="23.7794%" y="175.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="23.5294%" y="149" width="2.9412%" height="15" fill="rgb(234,67,33)" fg:x="8" fg:w="1"/><text x="23.7794%" y="159.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="23.5294%" y="133" width="2.9412%" height="15" fill="rgb(247,98,35)" fg:x="8" fg:w="1"/><text x="23.7794%" y="143.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="23.5294%" y="117" width="2.9412%" height="15" fill="rgb(247,138,52)" fg:x="8" fg:w="1"/><text x="23.7794%" y="127.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="23.5294%" y="101" width="2.9412%" height="15" fill="rgb(213,79,30)" fg:x="8" fg:w="1"/><text x="23.7794%" y="111.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="23.5294%" y="85" width="2.9412%" height="15" fill="rgb(246,177,23)" fg:x="8" fg:w="1"/><text x="23.7794%" y="95.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="23.5294%" y="69" width="2.9412%" height="15" fill="rgb(230,62,27)" fg:x="8" fg:w="1"/><text x="23.7794%" y="79.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="23.5294%" y="53" width="2.9412%" height="15" fill="rgb(216,154,8)" fg:x="8" fg:w="1"/><text x="23.7794%" y="63.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="23.5294%" y="37" width="2.9412%" height="15" fill="rgb(244,35,45)" fg:x="8" fg:w="1"/><text x="23.7794%" y="47.50">[u..</text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 2.94%)</title><rect x="26.4706%" y="357" width="2.9412%" height="15" fill="rgb(251,115,12)" fg:x="9" fg:w="1"/><text x="26.7206%" y="367.50">&lt;s..</text></g><g><title>std::io::impls::&lt;impl std::io::BufRead for &amp;mut B&gt;::read_line (1 samples, 2.94%)</title><rect x="26.4706%" y="341" width="2.9412%" height="15" fill="rgb(240,54,50)" fg:x="9" fg:w="1"/><text x="26.7206%" y="351.50">st..</text></g><g><title>std::io::BufRead::read_line (1 samples, 2.94%)</title><rect x="26.4706%" y="325" width="2.9412%" height="15" fill="rgb(233,84,52)" fg:x="9" fg:w="1"/><text x="26.7206%" y="335.50">st..</text></g><g><title>std::io::append_to_string (1 samples, 2.94%)</title><rect x="26.4706%" y="309" width="2.9412%" height="15" fill="rgb(207,117,47)" fg:x="9" fg:w="1"/><text x="26.7206%" y="319.50">st..</text></g><g><title>std::io::BufRead::read_line::{{closure}} (1 samples, 2.94%)</title><rect x="26.4706%" y="293" width="2.9412%" height="15" fill="rgb(249,43,39)" fg:x="9" fg:w="1"/><text x="26.7206%" y="303.50">st..</text></g><g><title>std::io::read_until (1 samples, 2.94%)</title><rect x="26.4706%" y="277" width="2.9412%" height="15" fill="rgb(209,38,44)" fg:x="9" fg:w="1"/><text x="26.7206%" y="287.50">st..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 2.94%)</title><rect x="26.4706%" y="261" width="2.9412%" height="15" fill="rgb(236,212,23)" fg:x="9" fg:w="1"/><text x="26.7206%" y="271.50">al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 2.94%)</title><rect x="26.4706%" y="245" width="2.9412%" height="15" fill="rgb(242,79,21)" fg:x="9" fg:w="1"/><text x="26.7206%" y="255.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 2.94%)</title><rect x="26.4706%" y="229" width="2.9412%" height="15" fill="rgb(211,96,35)" fg:x="9" fg:w="1"/><text x="26.7206%" y="239.50">al..</text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 2.94%)</title><rect x="26.4706%" y="213" width="2.9412%" height="15" fill="rgb(253,215,40)" fg:x="9" fg:w="1"/><text x="26.7206%" y="223.50">co..</text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 2.94%)</title><rect x="26.4706%" y="197" width="2.9412%" height="15" fill="rgb(211,81,21)" fg:x="9" fg:w="1"/><text x="26.7206%" y="207.50">__..</text></g><g><title>aoc21::day04::Board::new (1 samples, 2.94%)</title><rect x="29.4118%" y="293" width="2.9412%" height="15" fill="rgb(208,190,38)" fg:x="10" fg:w="1"/><text x="29.6618%" y="303.50">ao..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 2.94%)</title><rect x="29.4118%" y="277" width="2.9412%" height="15" fill="rgb(235,213,38)" fg:x="10" fg:w="1"/><text x="29.6618%" y="287.50">st..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 2.94%)</title><rect x="29.4118%" y="261" width="2.9412%" height="15" fill="rgb(237,122,38)" fg:x="10" fg:w="1"/><text x="29.6618%" y="271.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 2.94%)</title><rect x="29.4118%" y="245" width="2.9412%" height="15" fill="rgb(244,218,35)" fg:x="10" fg:w="1"/><text x="29.6618%" y="255.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 2.94%)</title><rect x="29.4118%" y="229" width="2.9412%" height="15" fill="rgb(240,68,47)" fg:x="10" fg:w="1"/><text x="29.6618%" y="239.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 2.94%)</title><rect x="29.4118%" y="213" width="2.9412%" height="15" fill="rgb(210,16,53)" fg:x="10" fg:w="1"/><text x="29.6618%" y="223.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 2.94%)</title><rect x="29.4118%" y="197" width="2.9412%" height="15" fill="rgb(235,124,12)" fg:x="10" fg:w="1"/><text x="29.6618%" y="207.50">ha..</text></g><g><title>hashbrown::map::make_hasher::{{closure}} (1 samples, 2.94%)</title><rect x="29.4118%" y="181" width="2.9412%" height="15" fill="rgb(224,169,11)" fg:x="10" fg:w="1"/><text x="29.6618%" y="191.50">ha..</text></g><g><title>hashbrown::map::make_hash (1 samples, 2.94%)</title><rect x="29.4118%" y="165" width="2.9412%" height="15" fill="rgb(250,166,2)" fg:x="10" fg:w="1"/><text x="29.6618%" y="175.50">ha..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 2.94%)</title><rect x="29.4118%" y="149" width="2.9412%" height="15" fill="rgb(242,216,29)" fg:x="10" fg:w="1"/><text x="29.6618%" y="159.50">&lt;s..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 2.94%)</title><rect x="29.4118%" y="133" width="2.9412%" height="15" fill="rgb(230,116,27)" fg:x="10" fg:w="1"/><text x="29.6618%" y="143.50">&lt;c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 2.94%)</title><rect x="29.4118%" y="117" width="2.9412%" height="15" fill="rgb(228,99,48)" fg:x="10" fg:w="1"/><text x="29.6618%" y="127.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 8.82%)</title><rect x="26.4706%" y="469" width="8.8235%" height="15" fill="rgb(253,11,6)" fg:x="9" fg:w="3"/><text x="26.7206%" y="479.50">core::iter::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 8.82%)</title><rect x="26.4706%" y="453" width="8.8235%" height="15" fill="rgb(247,143,39)" fg:x="9" fg:w="3"/><text x="26.7206%" y="463.50">&lt;alloc::vec:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 8.82%)</title><rect x="26.4706%" y="437" width="8.8235%" height="15" fill="rgb(236,97,10)" fg:x="9" fg:w="3"/><text x="26.7206%" y="447.50">&lt;alloc::vec:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 8.82%)</title><rect x="26.4706%" y="421" width="8.8235%" height="15" fill="rgb(233,208,19)" fg:x="9" fg:w="3"/><text x="26.7206%" y="431.50">&lt;alloc::vec:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 8.82%)</title><rect x="26.4706%" y="405" width="8.8235%" height="15" fill="rgb(216,164,2)" fg:x="9" fg:w="3"/><text x="26.7206%" y="415.50">&lt;alloc::vec:..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 8.82%)</title><rect x="26.4706%" y="389" width="8.8235%" height="15" fill="rgb(220,129,5)" fg:x="9" fg:w="3"/><text x="26.7206%" y="399.50">alloc::vec::..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 8.82%)</title><rect x="26.4706%" y="373" width="8.8235%" height="15" fill="rgb(242,17,10)" fg:x="9" fg:w="3"/><text x="26.7206%" y="383.50">&lt;core::iter:..</text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 5.88%)</title><rect x="29.4118%" y="357" width="5.8824%" height="15" fill="rgb(242,107,0)" fg:x="10" fg:w="2"/><text x="29.6618%" y="367.50">core::o..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 5.88%)</title><rect x="29.4118%" y="341" width="5.8824%" height="15" fill="rgb(251,28,31)" fg:x="10" fg:w="2"/><text x="29.6618%" y="351.50">core::o..</text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 5.88%)</title><rect x="29.4118%" y="325" width="5.8824%" height="15" fill="rgb(233,223,10)" fg:x="10" fg:w="2"/><text x="29.6618%" y="335.50">core::o..</text></g><g><title>aoc21::day04::parse_board (2 samples, 5.88%)</title><rect x="29.4118%" y="309" width="5.8824%" height="15" fill="rgb(215,21,27)" fg:x="10" fg:w="2"/><text x="29.6618%" y="319.50">aoc21::..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 2.94%)</title><rect x="32.3529%" y="293" width="2.9412%" height="15" fill="rgb(232,23,21)" fg:x="11" fg:w="1"/><text x="32.6029%" y="303.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 2.94%)</title><rect x="32.3529%" y="277" width="2.9412%" height="15" fill="rgb(244,5,23)" fg:x="11" fg:w="1"/><text x="32.6029%" y="287.50">&lt;a..</text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 2.94%)</title><rect x="32.3529%" y="261" width="2.9412%" height="15" fill="rgb(226,81,46)" fg:x="11" fg:w="1"/><text x="32.6029%" y="271.50">al..</text></g><g><title>&lt;I as alloc::vec::source_iter_marker::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (1 samples, 2.94%)</title><rect x="32.3529%" y="245" width="2.9412%" height="15" fill="rgb(247,70,30)" fg:x="11" fg:w="1"/><text x="32.6029%" y="255.50">&lt;I..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 2.94%)</title><rect x="32.3529%" y="229" width="2.9412%" height="15" fill="rgb(212,68,19)" fg:x="11" fg:w="1"/><text x="32.6029%" y="239.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 2.94%)</title><rect x="32.3529%" y="213" width="2.9412%" height="15" fill="rgb(240,187,13)" fg:x="11" fg:w="1"/><text x="32.6029%" y="223.50">co..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1 samples, 2.94%)</title><rect x="32.3529%" y="197" width="2.9412%" height="15" fill="rgb(223,113,26)" fg:x="11" fg:w="1"/><text x="32.6029%" y="207.50">co..</text></g><g><title>aoc21::day04::parse_board::{{closure}} (1 samples, 2.94%)</title><rect x="32.3529%" y="181" width="2.9412%" height="15" fill="rgb(206,192,2)" fg:x="11" fg:w="1"/><text x="32.6029%" y="191.50">ao..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 2.94%)</title><rect x="32.3529%" y="165" width="2.9412%" height="15" fill="rgb(241,108,4)" fg:x="11" fg:w="1"/><text x="32.6029%" y="175.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 2.94%)</title><rect x="32.3529%" y="149" width="2.9412%" height="15" fill="rgb(247,173,49)" fg:x="11" fg:w="1"/><text x="32.6029%" y="159.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 2.94%)</title><rect x="32.3529%" y="133" width="2.9412%" height="15" fill="rgb(224,114,35)" fg:x="11" fg:w="1"/><text x="32.6029%" y="143.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 2.94%)</title><rect x="32.3529%" y="117" width="2.9412%" height="15" fill="rgb(245,159,27)" fg:x="11" fg:w="1"/><text x="32.6029%" y="127.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 2.94%)</title><rect x="32.3529%" y="101" width="2.9412%" height="15" fill="rgb(245,172,44)" fg:x="11" fg:w="1"/><text x="32.6029%" y="111.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 2.94%)</title><rect x="32.3529%" y="85" width="2.9412%" height="15" fill="rgb(236,23,11)" fg:x="11" fg:w="1"/><text x="32.6029%" y="95.50">al..</text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 2.94%)</title><rect x="32.3529%" y="69" width="2.9412%" height="15" fill="rgb(205,117,38)" fg:x="11" fg:w="1"/><text x="32.6029%" y="79.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 2.94%)</title><rect x="32.3529%" y="53" width="2.9412%" height="15" fill="rgb(237,72,25)" fg:x="11" fg:w="1"/><text x="32.6029%" y="63.50">&lt;c..</text></g><g><title>aoc21::day04::solve (4 samples, 11.76%)</title><rect x="26.4706%" y="485" width="11.7647%" height="15" fill="rgb(244,70,9)" fg:x="9" fg:w="4"/><text x="26.7206%" y="495.50">aoc21::day04::sol..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 2.94%)</title><rect x="35.2941%" y="469" width="2.9412%" height="15" fill="rgb(217,125,39)" fg:x="12" fg:w="1"/><text x="35.5441%" y="479.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 2.94%)</title><rect x="35.2941%" y="453" width="2.9412%" height="15" fill="rgb(235,36,10)" fg:x="12" fg:w="1"/><text x="35.5441%" y="463.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 2.94%)</title><rect x="35.2941%" y="437" width="2.9412%" height="15" fill="rgb(251,123,47)" fg:x="12" fg:w="1"/><text x="35.5441%" y="447.50">co..</text></g><g><title>aoc21::day04::solve::{{closure}} (1 samples, 2.94%)</title><rect x="35.2941%" y="421" width="2.9412%" height="15" fill="rgb(221,13,13)" fg:x="12" fg:w="1"/><text x="35.5441%" y="431.50">ao..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (1 samples, 2.94%)</title><rect x="35.2941%" y="405" width="2.9412%" height="15" fill="rgb(238,131,9)" fg:x="12" fg:w="1"/><text x="35.5441%" y="415.50">al..</text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 2.94%)</title><rect x="35.2941%" y="389" width="2.9412%" height="15" fill="rgb(211,50,8)" fg:x="12" fg:w="1"/><text x="35.5441%" y="399.50">co..</text></g><g><title>alloc::vec::from_elem (1 samples, 2.94%)</title><rect x="38.2353%" y="469" width="2.9412%" height="15" fill="rgb(245,182,24)" fg:x="13" fg:w="1"/><text x="38.4853%" y="479.50">al..</text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 2.94%)</title><rect x="38.2353%" y="453" width="2.9412%" height="15" fill="rgb(242,14,37)" fg:x="13" fg:w="1"/><text x="38.4853%" y="463.50">&lt;T..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 2.94%)</title><rect x="38.2353%" y="437" width="2.9412%" height="15" fill="rgb(246,228,12)" fg:x="13" fg:w="1"/><text x="38.4853%" y="447.50">al..</text></g><g><title>&lt;alloc::vec::ExtendElement&lt;T&gt; as alloc::vec::ExtendWith&lt;T&gt;&gt;::next (1 samples, 2.94%)</title><rect x="38.2353%" y="421" width="2.9412%" height="15" fill="rgb(213,55,15)" fg:x="13" fg:w="1"/><text x="38.4853%" y="431.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 2.94%)</title><rect x="38.2353%" y="405" width="2.9412%" height="15" fill="rgb(209,9,3)" fg:x="13" fg:w="1"/><text x="38.4853%" y="415.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 2.94%)</title><rect x="38.2353%" y="389" width="2.9412%" height="15" fill="rgb(230,59,30)" fg:x="13" fg:w="1"/><text x="38.4853%" y="399.50">al..</text></g><g><title>alloc::slice::hack::to_vec (1 samples, 2.94%)</title><rect x="38.2353%" y="373" width="2.9412%" height="15" fill="rgb(209,121,21)" fg:x="13" fg:w="1"/><text x="38.4853%" y="383.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 2.94%)</title><rect x="38.2353%" y="357" width="2.9412%" height="15" fill="rgb(220,109,13)" fg:x="13" fg:w="1"/><text x="38.4853%" y="367.50">&lt;T..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 2.94%)</title><rect x="38.2353%" y="341" width="2.9412%" height="15" fill="rgb(232,18,1)" fg:x="13" fg:w="1"/><text x="38.4853%" y="351.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 2.94%)</title><rect x="38.2353%" y="325" width="2.9412%" height="15" fill="rgb(215,41,42)" fg:x="13" fg:w="1"/><text x="38.4853%" y="335.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 2.94%)</title><rect x="38.2353%" y="309" width="2.9412%" height="15" fill="rgb(224,123,36)" fg:x="13" fg:w="1"/><text x="38.4853%" y="319.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 2.94%)</title><rect x="38.2353%" y="293" width="2.9412%" height="15" fill="rgb(240,125,3)" fg:x="13" fg:w="1"/><text x="38.4853%" y="303.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 2.94%)</title><rect x="38.2353%" y="277" width="2.9412%" height="15" fill="rgb(205,98,50)" fg:x="13" fg:w="1"/><text x="38.4853%" y="287.50">al..</text></g><g><title>alloc::alloc::alloc (1 samples, 2.94%)</title><rect x="38.2353%" y="261" width="2.9412%" height="15" fill="rgb(205,185,37)" fg:x="13" fg:w="1"/><text x="38.4853%" y="271.50">al..</text></g><g><title>__GI___libc_malloc (1 samples, 2.94%)</title><rect x="38.2353%" y="245" width="2.9412%" height="15" fill="rgb(238,207,15)" fg:x="13" fg:w="1"/><text x="38.4853%" y="255.50">__..</text></g><g><title>_int_malloc (1 samples, 2.94%)</title><rect x="38.2353%" y="229" width="2.9412%" height="15" fill="rgb(213,199,42)" fg:x="13" fg:w="1"/><text x="38.4853%" y="239.50">_i..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="38.2353%" y="213" width="2.9412%" height="15" fill="rgb(235,201,11)" fg:x="13" fg:w="1"/><text x="38.4853%" y="223.50">[u..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 2.94%)</title><rect x="52.9412%" y="453" width="2.9412%" height="15" fill="rgb(207,46,11)" fg:x="18" fg:w="1"/><text x="53.1912%" y="463.50">&lt;a..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 2.94%)</title><rect x="52.9412%" y="437" width="2.9412%" height="15" fill="rgb(241,35,35)" fg:x="18" fg:w="1"/><text x="53.1912%" y="447.50">co..</text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 2.94%)</title><rect x="52.9412%" y="421" width="2.9412%" height="15" fill="rgb(243,32,47)" fg:x="18" fg:w="1"/><text x="53.1912%" y="431.50">&lt;u..</text></g><g><title>aoc21::day05::count_overlaps (6 samples, 17.65%)</title><rect x="41.1765%" y="469" width="17.6471%" height="15" fill="rgb(247,202,23)" fg:x="14" fg:w="6"/><text x="41.4265%" y="479.50">aoc21::day05::count_overlaps</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 2.94%)</title><rect x="55.8824%" y="453" width="2.9412%" height="15" fill="rgb(219,102,11)" fg:x="19" fg:w="1"/><text x="56.1324%" y="463.50">co..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 2.94%)</title><rect x="55.8824%" y="437" width="2.9412%" height="15" fill="rgb(243,110,44)" fg:x="19" fg:w="1"/><text x="56.1324%" y="447.50">&lt;c..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::lt (1 samples, 2.94%)</title><rect x="55.8824%" y="421" width="2.9412%" height="15" fill="rgb(222,74,54)" fg:x="19" fg:w="1"/><text x="56.1324%" y="431.50">co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (15 samples, 44.12%)</title><rect x="17.6471%" y="501" width="44.1176%" height="15" fill="rgb(216,99,12)" fg:x="6" fg:w="15"/><text x="17.8971%" y="511.50">core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::ca..</text></g><g><title>aoc21::day05::solve (8 samples, 23.53%)</title><rect x="38.2353%" y="485" width="23.5294%" height="15" fill="rgb(226,22,26)" fg:x="13" fg:w="8"/><text x="38.4853%" y="495.50">aoc21::day05::solve</text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 2.94%)</title><rect x="58.8235%" y="469" width="2.9412%" height="15" fill="rgb(217,163,10)" fg:x="20" fg:w="1"/><text x="59.0735%" y="479.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 2.94%)</title><rect x="58.8235%" y="453" width="2.9412%" height="15" fill="rgb(213,25,53)" fg:x="20" fg:w="1"/><text x="59.0735%" y="463.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 2.94%)</title><rect x="58.8235%" y="437" width="2.9412%" height="15" fill="rgb(252,105,26)" fg:x="20" fg:w="1"/><text x="59.0735%" y="447.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 2.94%)</title><rect x="58.8235%" y="421" width="2.9412%" height="15" fill="rgb(220,39,43)" fg:x="20" fg:w="1"/><text x="59.0735%" y="431.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 2.94%)</title><rect x="58.8235%" y="405" width="2.9412%" height="15" fill="rgb(229,68,48)" fg:x="20" fg:w="1"/><text x="59.0735%" y="415.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 2.94%)</title><rect x="58.8235%" y="389" width="2.9412%" height="15" fill="rgb(252,8,32)" fg:x="20" fg:w="1"/><text x="59.0735%" y="399.50">al..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 2.94%)</title><rect x="58.8235%" y="373" width="2.9412%" height="15" fill="rgb(223,20,43)" fg:x="20" fg:w="1"/><text x="59.0735%" y="383.50">&lt;c..</text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 2.94%)</title><rect x="58.8235%" y="357" width="2.9412%" height="15" fill="rgb(229,81,49)" fg:x="20" fg:w="1"/><text x="59.0735%" y="367.50">co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 2.94%)</title><rect x="58.8235%" y="341" width="2.9412%" height="15" fill="rgb(236,28,36)" fg:x="20" fg:w="1"/><text x="59.0735%" y="351.50">co..</text></g><g><title>aoc21::day05::solve::{{closure}} (1 samples, 2.94%)</title><rect x="58.8235%" y="325" width="2.9412%" height="15" fill="rgb(249,185,26)" fg:x="20" fg:w="1"/><text x="59.0735%" y="335.50">ao..</text></g><g><title>core::str::&lt;impl str&gt;::parse (1 samples, 2.94%)</title><rect x="58.8235%" y="309" width="2.9412%" height="15" fill="rgb(249,174,33)" fg:x="20" fg:w="1"/><text x="59.0735%" y="319.50">co..</text></g><g><title>&lt;aoc21::day05::Line as core::str::traits::FromStr&gt;::from_str (1 samples, 2.94%)</title><rect x="58.8235%" y="293" width="2.9412%" height="15" fill="rgb(233,201,37)" fg:x="20" fg:w="1"/><text x="59.0735%" y="303.50">&lt;a..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 2.94%)</title><rect x="58.8235%" y="277" width="2.9412%" height="15" fill="rgb(221,78,26)" fg:x="20" fg:w="1"/><text x="59.0735%" y="287.50">&lt;c..</text></g><g><title>std::panic::catch_unwind (16 samples, 47.06%)</title><rect x="17.6471%" y="629" width="47.0588%" height="15" fill="rgb(250,127,30)" fg:x="6" fg:w="16"/><text x="17.8971%" y="639.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (16 samples, 47.06%)</title><rect x="17.6471%" y="613" width="47.0588%" height="15" fill="rgb(230,49,44)" fg:x="6" fg:w="16"/><text x="17.8971%" y="623.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (16 samples, 47.06%)</title><rect x="17.6471%" y="597" width="47.0588%" height="15" fill="rgb(229,67,23)" fg:x="6" fg:w="16"/><text x="17.8971%" y="607.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (16 samples, 47.06%)</title><rect x="17.6471%" y="581" width="47.0588%" height="15" fill="rgb(249,83,47)" fg:x="6" fg:w="16"/><text x="17.8971%" y="591.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::cal..</text></g><g><title>std::rt::lang_start::{{closure}} (16 samples, 47.06%)</title><rect x="17.6471%" y="565" width="47.0588%" height="15" fill="rgb(215,43,3)" fg:x="6" fg:w="16"/><text x="17.8971%" y="575.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (16 samples, 47.06%)</title><rect x="17.6471%" y="549" width="47.0588%" height="15" fill="rgb(238,154,13)" fg:x="6" fg:w="16"/><text x="17.8971%" y="559.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (16 samples, 47.06%)</title><rect x="17.6471%" y="533" width="47.0588%" height="15" fill="rgb(219,56,2)" fg:x="6" fg:w="16"/><text x="17.8971%" y="543.50">core::ops::function::FnOnce::call_once</text></g><g><title>aoc21::main (16 samples, 47.06%)</title><rect x="17.6471%" y="517" width="47.0588%" height="15" fill="rgb(233,0,4)" fg:x="6" fg:w="16"/><text x="17.8971%" y="527.50">aoc21::main</text></g><g><title>std::io::stdio::_print (1 samples, 2.94%)</title><rect x="61.7647%" y="501" width="2.9412%" height="15" fill="rgb(235,30,7)" fg:x="21" fg:w="1"/><text x="62.0147%" y="511.50">st..</text></g><g><title>std::io::stdio::print_to (1 samples, 2.94%)</title><rect x="61.7647%" y="485" width="2.9412%" height="15" fill="rgb(250,79,13)" fg:x="21" fg:w="1"/><text x="62.0147%" y="495.50">st..</text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 2.94%)</title><rect x="61.7647%" y="469" width="2.9412%" height="15" fill="rgb(211,146,34)" fg:x="21" fg:w="1"/><text x="62.0147%" y="479.50">&lt;s..</text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 2.94%)</title><rect x="61.7647%" y="453" width="2.9412%" height="15" fill="rgb(228,22,38)" fg:x="21" fg:w="1"/><text x="62.0147%" y="463.50">&lt;&amp;..</text></g><g><title>std::io::Write::write_fmt (1 samples, 2.94%)</title><rect x="61.7647%" y="437" width="2.9412%" height="15" fill="rgb(235,168,5)" fg:x="21" fg:w="1"/><text x="62.0147%" y="447.50">st..</text></g><g><title>core::fmt::write (1 samples, 2.94%)</title><rect x="61.7647%" y="421" width="2.9412%" height="15" fill="rgb(221,155,16)" fg:x="21" fg:w="1"/><text x="62.0147%" y="431.50">co..</text></g><g><title>core::fmt::run (1 samples, 2.94%)</title><rect x="61.7647%" y="405" width="2.9412%" height="15" fill="rgb(215,215,53)" fg:x="21" fg:w="1"/><text x="62.0147%" y="415.50">co..</text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 2.94%)</title><rect x="61.7647%" y="389" width="2.9412%" height="15" fill="rgb(223,4,10)" fg:x="21" fg:w="1"/><text x="62.0147%" y="399.50">co..</text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 2.94%)</title><rect x="61.7647%" y="373" width="2.9412%" height="15" fill="rgb(234,103,6)" fg:x="21" fg:w="1"/><text x="62.0147%" y="383.50">co..</text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 2.94%)</title><rect x="61.7647%" y="357" width="2.9412%" height="15" fill="rgb(227,97,0)" fg:x="21" fg:w="1"/><text x="62.0147%" y="367.50">co..</text></g><g><title>__libc_start_main (17 samples, 50.00%)</title><rect x="17.6471%" y="741" width="50.0000%" height="15" fill="rgb(234,150,53)" fg:x="6" fg:w="17"/><text x="17.8971%" y="751.50">__libc_start_main</text></g><g><title>main (17 samples, 50.00%)</title><rect x="17.6471%" y="725" width="50.0000%" height="15" fill="rgb(228,201,54)" fg:x="6" fg:w="17"/><text x="17.8971%" y="735.50">main</text></g><g><title>std::rt::lang_start_internal (17 samples, 50.00%)</title><rect x="17.6471%" y="709" width="50.0000%" height="15" fill="rgb(222,22,37)" fg:x="6" fg:w="17"/><text x="17.8971%" y="719.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (17 samples, 50.00%)</title><rect x="17.6471%" y="693" width="50.0000%" height="15" fill="rgb(237,53,32)" fg:x="6" fg:w="17"/><text x="17.8971%" y="703.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (17 samples, 50.00%)</title><rect x="17.6471%" y="677" width="50.0000%" height="15" fill="rgb(233,25,53)" fg:x="6" fg:w="17"/><text x="17.8971%" y="687.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (17 samples, 50.00%)</title><rect x="17.6471%" y="661" width="50.0000%" height="15" fill="rgb(210,40,34)" fg:x="6" fg:w="17"/><text x="17.8971%" y="671.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (17 samples, 50.00%)</title><rect x="17.6471%" y="645" width="50.0000%" height="15" fill="rgb(241,220,44)" fg:x="6" fg:w="17"/><text x="17.8971%" y="655.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::sys_common::rt::init (1 samples, 2.94%)</title><rect x="64.7059%" y="629" width="2.9412%" height="15" fill="rgb(235,28,35)" fg:x="22" fg:w="1"/><text x="64.9559%" y="639.50">st..</text></g><g><title>std::sys::unix::thread::guard::init (1 samples, 2.94%)</title><rect x="64.7059%" y="613" width="2.9412%" height="15" fill="rgb(210,56,17)" fg:x="22" fg:w="1"/><text x="64.9559%" y="623.50">st..</text></g><g><title>std::sys::unix::thread::guard::get_stack_start_aligned (1 samples, 2.94%)</title><rect x="64.7059%" y="597" width="2.9412%" height="15" fill="rgb(224,130,29)" fg:x="22" fg:w="1"/><text x="64.9559%" y="607.50">st..</text></g><g><title>std::sys::unix::thread::guard::get_stack_start (1 samples, 2.94%)</title><rect x="64.7059%" y="581" width="2.9412%" height="15" fill="rgb(235,212,8)" fg:x="22" fg:w="1"/><text x="64.9559%" y="591.50">st..</text></g><g><title>__pthread_getattr_np (1 samples, 2.94%)</title><rect x="64.7059%" y="565" width="2.9412%" height="15" fill="rgb(223,33,50)" fg:x="22" fg:w="1"/><text x="64.9559%" y="575.50">__..</text></g><g><title>_IO_getdelim (1 samples, 2.94%)</title><rect x="64.7059%" y="549" width="2.9412%" height="15" fill="rgb(219,149,13)" fg:x="22" fg:w="1"/><text x="64.9559%" y="559.50">_I..</text></g><g><title>_IO_new_file_underflow (1 samples, 2.94%)</title><rect x="64.7059%" y="533" width="2.9412%" height="15" fill="rgb(250,156,29)" fg:x="22" fg:w="1"/><text x="64.9559%" y="543.50">_I..</text></g><g><title>__GI___read_nocancel (1 samples, 2.94%)</title><rect x="64.7059%" y="517" width="2.9412%" height="15" fill="rgb(216,193,19)" fg:x="22" fg:w="1"/><text x="64.9559%" y="527.50">__..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="64.7059%" y="501" width="2.9412%" height="15" fill="rgb(216,135,14)" fg:x="22" fg:w="1"/><text x="64.9559%" y="511.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="64.7059%" y="485" width="2.9412%" height="15" fill="rgb(241,47,5)" fg:x="22" fg:w="1"/><text x="64.9559%" y="495.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="64.7059%" y="469" width="2.9412%" height="15" fill="rgb(233,42,35)" fg:x="22" fg:w="1"/><text x="64.9559%" y="479.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="64.7059%" y="453" width="2.9412%" height="15" fill="rgb(231,13,6)" fg:x="22" fg:w="1"/><text x="64.9559%" y="463.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="64.7059%" y="437" width="2.9412%" height="15" fill="rgb(207,181,40)" fg:x="22" fg:w="1"/><text x="64.9559%" y="447.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="64.7059%" y="421" width="2.9412%" height="15" fill="rgb(254,173,49)" fg:x="22" fg:w="1"/><text x="64.9559%" y="431.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="64.7059%" y="405" width="2.9412%" height="15" fill="rgb(221,1,38)" fg:x="22" fg:w="1"/><text x="64.9559%" y="415.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="64.7059%" y="389" width="2.9412%" height="15" fill="rgb(206,124,46)" fg:x="22" fg:w="1"/><text x="64.9559%" y="399.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="64.7059%" y="373" width="2.9412%" height="15" fill="rgb(249,21,11)" fg:x="22" fg:w="1"/><text x="64.9559%" y="383.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="64.7059%" y="357" width="2.9412%" height="15" fill="rgb(222,201,40)" fg:x="22" fg:w="1"/><text x="64.9559%" y="367.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="64.7059%" y="341" width="2.9412%" height="15" fill="rgb(235,61,29)" fg:x="22" fg:w="1"/><text x="64.9559%" y="351.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="64.7059%" y="325" width="2.9412%" height="15" fill="rgb(219,207,3)" fg:x="22" fg:w="1"/><text x="64.9559%" y="335.50">[u..</text></g><g><title>__libc_early_init (1 samples, 2.94%)</title><rect x="67.6471%" y="677" width="2.9412%" height="15" fill="rgb(222,56,46)" fg:x="23" fg:w="1"/><text x="67.8971%" y="687.50">__..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="67.6471%" y="661" width="2.9412%" height="15" fill="rgb(239,76,54)" fg:x="23" fg:w="1"/><text x="67.8971%" y="671.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="67.6471%" y="645" width="2.9412%" height="15" fill="rgb(231,124,27)" fg:x="23" fg:w="1"/><text x="67.8971%" y="655.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="67.6471%" y="629" width="2.9412%" height="15" fill="rgb(249,195,6)" fg:x="23" fg:w="1"/><text x="67.8971%" y="639.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="67.6471%" y="613" width="2.9412%" height="15" fill="rgb(237,174,47)" fg:x="23" fg:w="1"/><text x="67.8971%" y="623.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="67.6471%" y="597" width="2.9412%" height="15" fill="rgb(206,201,31)" fg:x="23" fg:w="1"/><text x="67.8971%" y="607.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="67.6471%" y="581" width="2.9412%" height="15" fill="rgb(231,57,52)" fg:x="23" fg:w="1"/><text x="67.8971%" y="591.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="67.6471%" y="565" width="2.9412%" height="15" fill="rgb(248,177,22)" fg:x="23" fg:w="1"/><text x="67.8971%" y="575.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="67.6471%" y="549" width="2.9412%" height="15" fill="rgb(215,211,37)" fg:x="23" fg:w="1"/><text x="67.8971%" y="559.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="67.6471%" y="533" width="2.9412%" height="15" fill="rgb(241,128,51)" fg:x="23" fg:w="1"/><text x="67.8971%" y="543.50">[u..</text></g><g><title>_dl_map_object_deps (1 samples, 2.94%)</title><rect x="70.5882%" y="677" width="2.9412%" height="15" fill="rgb(227,165,31)" fg:x="24" fg:w="1"/><text x="70.8382%" y="687.50">_d..</text></g><g><title>_dl_catch_exception (1 samples, 2.94%)</title><rect x="70.5882%" y="661" width="2.9412%" height="15" fill="rgb(228,167,24)" fg:x="24" fg:w="1"/><text x="70.8382%" y="671.50">_d..</text></g><g><title>openaux (1 samples, 2.94%)</title><rect x="70.5882%" y="645" width="2.9412%" height="15" fill="rgb(228,143,12)" fg:x="24" fg:w="1"/><text x="70.8382%" y="655.50">op..</text></g><g><title>_dl_map_object (1 samples, 2.94%)</title><rect x="70.5882%" y="629" width="2.9412%" height="15" fill="rgb(249,149,8)" fg:x="24" fg:w="1"/><text x="70.8382%" y="639.50">_d..</text></g><g><title>_dl_map_object_from_fd (1 samples, 2.94%)</title><rect x="70.5882%" y="613" width="2.9412%" height="15" fill="rgb(243,35,44)" fg:x="24" fg:w="1"/><text x="70.8382%" y="623.50">_d..</text></g><g><title>_dl_map_segments (1 samples, 2.94%)</title><rect x="70.5882%" y="597" width="2.9412%" height="15" fill="rgb(246,89,9)" fg:x="24" fg:w="1"/><text x="70.8382%" y="607.50">_d..</text></g><g><title>__mmap64 (1 samples, 2.94%)</title><rect x="70.5882%" y="581" width="2.9412%" height="15" fill="rgb(233,213,13)" fg:x="24" fg:w="1"/><text x="70.8382%" y="591.50">__..</text></g><g><title>__mmap64 (1 samples, 2.94%)</title><rect x="70.5882%" y="565" width="2.9412%" height="15" fill="rgb(233,141,41)" fg:x="24" fg:w="1"/><text x="70.8382%" y="575.50">__..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="70.5882%" y="549" width="2.9412%" height="15" fill="rgb(239,167,4)" fg:x="24" fg:w="1"/><text x="70.8382%" y="559.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="70.5882%" y="533" width="2.9412%" height="15" fill="rgb(209,217,16)" fg:x="24" fg:w="1"/><text x="70.8382%" y="543.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="70.5882%" y="517" width="2.9412%" height="15" fill="rgb(219,88,35)" fg:x="24" fg:w="1"/><text x="70.8382%" y="527.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="70.5882%" y="501" width="2.9412%" height="15" fill="rgb(220,193,23)" fg:x="24" fg:w="1"/><text x="70.8382%" y="511.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="70.5882%" y="485" width="2.9412%" height="15" fill="rgb(230,90,52)" fg:x="24" fg:w="1"/><text x="70.8382%" y="495.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="70.5882%" y="469" width="2.9412%" height="15" fill="rgb(252,106,19)" fg:x="24" fg:w="1"/><text x="70.8382%" y="479.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="70.5882%" y="453" width="2.9412%" height="15" fill="rgb(206,74,20)" fg:x="24" fg:w="1"/><text x="70.8382%" y="463.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="70.5882%" y="437" width="2.9412%" height="15" fill="rgb(230,138,44)" fg:x="24" fg:w="1"/><text x="70.8382%" y="447.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="70.5882%" y="421" width="2.9412%" height="15" fill="rgb(235,182,43)" fg:x="24" fg:w="1"/><text x="70.8382%" y="431.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="70.5882%" y="405" width="2.9412%" height="15" fill="rgb(242,16,51)" fg:x="24" fg:w="1"/><text x="70.8382%" y="415.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="70.5882%" y="389" width="2.9412%" height="15" fill="rgb(248,9,4)" fg:x="24" fg:w="1"/><text x="70.8382%" y="399.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="70.5882%" y="373" width="2.9412%" height="15" fill="rgb(210,31,22)" fg:x="24" fg:w="1"/><text x="70.8382%" y="383.50">[u..</text></g><g><title>aoc21 (26 samples, 76.47%)</title><rect x="0.0000%" y="773" width="76.4706%" height="15" fill="rgb(239,54,39)" fg:x="0" fg:w="26"/><text x="0.2500%" y="783.50">aoc21</text></g><g><title>_start (20 samples, 58.82%)</title><rect x="17.6471%" y="757" width="58.8235%" height="15" fill="rgb(230,99,41)" fg:x="6" fg:w="20"/><text x="17.8971%" y="767.50">_start</text></g><g><title>_dl_start (3 samples, 8.82%)</title><rect x="67.6471%" y="741" width="8.8235%" height="15" fill="rgb(253,106,12)" fg:x="23" fg:w="3"/><text x="67.8971%" y="751.50">_dl_start</text></g><g><title>_dl_start_final (3 samples, 8.82%)</title><rect x="67.6471%" y="725" width="8.8235%" height="15" fill="rgb(213,46,41)" fg:x="23" fg:w="3"/><text x="67.8971%" y="735.50">_dl_start_fi..</text></g><g><title>_dl_sysdep_start (3 samples, 8.82%)</title><rect x="67.6471%" y="709" width="8.8235%" height="15" fill="rgb(215,133,35)" fg:x="23" fg:w="3"/><text x="67.8971%" y="719.50">_dl_sysdep_s..</text></g><g><title>dl_main (3 samples, 8.82%)</title><rect x="67.6471%" y="693" width="8.8235%" height="15" fill="rgb(213,28,5)" fg:x="23" fg:w="3"/><text x="67.8971%" y="703.50">dl_main</text></g><g><title>setup_vdso (1 samples, 2.94%)</title><rect x="73.5294%" y="677" width="2.9412%" height="15" fill="rgb(215,77,49)" fg:x="25" fg:w="1"/><text x="73.7794%" y="687.50">se..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="73.5294%" y="661" width="2.9412%" height="15" fill="rgb(248,100,22)" fg:x="25" fg:w="1"/><text x="73.7794%" y="671.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="73.5294%" y="645" width="2.9412%" height="15" fill="rgb(208,67,9)" fg:x="25" fg:w="1"/><text x="73.7794%" y="655.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="73.5294%" y="629" width="2.9412%" height="15" fill="rgb(219,133,21)" fg:x="25" fg:w="1"/><text x="73.7794%" y="639.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="73.5294%" y="613" width="2.9412%" height="15" fill="rgb(246,46,29)" fg:x="25" fg:w="1"/><text x="73.7794%" y="623.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="73.5294%" y="597" width="2.9412%" height="15" fill="rgb(246,185,52)" fg:x="25" fg:w="1"/><text x="73.7794%" y="607.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="73.5294%" y="581" width="2.9412%" height="15" fill="rgb(252,136,11)" fg:x="25" fg:w="1"/><text x="73.7794%" y="591.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="73.5294%" y="565" width="2.9412%" height="15" fill="rgb(219,138,53)" fg:x="25" fg:w="1"/><text x="73.7794%" y="575.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="73.5294%" y="549" width="2.9412%" height="15" fill="rgb(211,51,23)" fg:x="25" fg:w="1"/><text x="73.7794%" y="559.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="73.5294%" y="533" width="2.9412%" height="15" fill="rgb(247,221,28)" fg:x="25" fg:w="1"/><text x="73.7794%" y="543.50">[u..</text></g><g><title>[unknown] (1 samples, 2.94%)</title><rect x="73.5294%" y="517" width="2.9412%" height="15" fill="rgb(251,222,45)" fg:x="25" fg:w="1"/><text x="73.7794%" y="527.50">[u..</text></g><g><title>all (34 samples, 100%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(217,162,53)" fg:x="0" fg:w="34"/><text x="0.2500%" y="799.50"></text></g><g><title>perf (8 samples, 23.53%)</title><rect x="76.4706%" y="773" width="23.5294%" height="15" fill="rgb(229,93,14)" fg:x="26" fg:w="8"/><text x="76.7206%" y="783.50">perf</text></g><g><title>[unknown] (8 samples, 23.53%)</title><rect x="76.4706%" y="757" width="23.5294%" height="15" fill="rgb(209,67,49)" fg:x="26" fg:w="8"/><text x="76.7206%" y="767.50">[unknown]</text></g><g><title>[unknown] (8 samples, 23.53%)</title><rect x="76.4706%" y="741" width="23.5294%" height="15" fill="rgb(213,87,29)" fg:x="26" fg:w="8"/><text x="76.7206%" y="751.50">[unknown]</text></g><g><title>[unknown] (8 samples, 23.53%)</title><rect x="76.4706%" y="725" width="23.5294%" height="15" fill="rgb(205,151,52)" fg:x="26" fg:w="8"/><text x="76.7206%" y="735.50">[unknown]</text></g><g><title>[unknown] (8 samples, 23.53%)</title><rect x="76.4706%" y="709" width="23.5294%" height="15" fill="rgb(253,215,39)" fg:x="26" fg:w="8"/><text x="76.7206%" y="719.50">[unknown]</text></g><g><title>[unknown] (8 samples, 23.53%)</title><rect x="76.4706%" y="693" width="23.5294%" height="15" fill="rgb(221,220,41)" fg:x="26" fg:w="8"/><text x="76.7206%" y="703.50">[unknown]</text></g><g><title>[unknown] (8 samples, 23.53%)</title><rect x="76.4706%" y="677" width="23.5294%" height="15" fill="rgb(218,133,21)" fg:x="26" fg:w="8"/><text x="76.7206%" y="687.50">[unknown]</text></g><g><title>[unknown] (8 samples, 23.53%)</title><rect x="76.4706%" y="661" width="23.5294%" height="15" fill="rgb(221,193,43)" fg:x="26" fg:w="8"/><text x="76.7206%" y="671.50">[unknown]</text></g><g><title>[unknown] (8 samples, 23.53%)</title><rect x="76.4706%" y="645" width="23.5294%" height="15" fill="rgb(240,128,52)" fg:x="26" fg:w="8"/><text x="76.7206%" y="655.50">[unknown]</text></g><g><title>[unknown] (8 samples, 23.53%)</title><rect x="76.4706%" y="629" width="23.5294%" height="15" fill="rgb(253,114,12)" fg:x="26" fg:w="8"/><text x="76.7206%" y="639.50">[unknown]</text></g><g><title>[unknown] (8 samples, 23.53%)</title><rect x="76.4706%" y="613" width="23.5294%" height="15" fill="rgb(215,223,47)" fg:x="26" fg:w="8"/><text x="76.7206%" y="623.50">[unknown]</text></g><g><title>[unknown] (8 samples, 23.53%)</title><rect x="76.4706%" y="597" width="23.5294%" height="15" fill="rgb(248,225,23)" fg:x="26" fg:w="8"/><text x="76.7206%" y="607.50">[unknown]</text></g><g><title>[unknown] (8 samples, 23.53%)</title><rect x="76.4706%" y="581" width="23.5294%" height="15" fill="rgb(250,108,0)" fg:x="26" fg:w="8"/><text x="76.7206%" y="591.50">[unknown]</text></g><g><title>[unknown] (8 samples, 23.53%)</title><rect x="76.4706%" y="565" width="23.5294%" height="15" fill="rgb(228,208,7)" fg:x="26" fg:w="8"/><text x="76.7206%" y="575.50">[unknown]</text></g><g><title>[unknown] (8 samples, 23.53%)</title><rect x="76.4706%" y="549" width="23.5294%" height="15" fill="rgb(244,45,10)" fg:x="26" fg:w="8"/><text x="76.7206%" y="559.50">[unknown]</text></g><g><title>[unknown] (8 samples, 23.53%)</title><rect x="76.4706%" y="533" width="23.5294%" height="15" fill="rgb(207,125,25)" fg:x="26" fg:w="8"/><text x="76.7206%" y="543.50">[unknown]</text></g><g><title>[unknown] (8 samples, 23.53%)</title><rect x="76.4706%" y="517" width="23.5294%" height="15" fill="rgb(210,195,18)" fg:x="26" fg:w="8"/><text x="76.7206%" y="527.50">[unknown]</text></g></svg></svg>